"functions":
- "name": "_ZZN8spvtools3opt15LoopPeelingPass15ProcessFunctionEPNS0_8FunctionEENK3$_0clEPNS0_4LoopE"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "Loop * spvtools::opt::LoopPeelingPass::operator()(const void *, Loop *)"
- "name": "_ZN8spvtools9Optimizer20RegisterPassFromFlagERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "bool"
  "signature": "bool spvtools::Optimizer::RegisterPassFromFlag(const string &)"
- "name": "_ZN7glslang11HlslGrammar15acceptCaseLabelERP11TIntermNode"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "bool"
  "signature": "bool glslang::HlslGrammar::acceptCaseLabel(TIntermNode &*)"
- "name": "spvValidateBinary"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "spv_result_t spvValidateBinary(const spv_const_context, const uint32_t *, const size_t, spv_diagnostic *)"
- "name": "_ZN8spvtools3opt15LoopPeelingPass11ProcessLoopEPNS0_4LoopEPNS0_11CodeMetricsE"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "struct pair<bool, spvtools::opt::Loop *> spvtools::opt::LoopPeelingPass::ProcessLoop(Loop *, struct CodeMetrics *)"
- "name": "_ZNK8spvtools10SpirvTools8ValidateEPKjm"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  "return_type": "bool"
  "signature": "bool spvtools::SpirvTools::Validate(const uint32_t *, const size_t)"
- "name": "_ZNK8spvtools9Optimizer3RunEPKjmPNSt3__16vectorIjNS3_9allocatorIjEEEERKNS_16ValidatorOptionsEb"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool"
  "return_type": "bool"
  "signature": "bool spvtools::Optimizer::Run(const uint32_t *, const size_t, vector<unsigned int, std::__1::allocator<unsigned int> > *, const ValidatorOptions &, bool)"
- "name": "spvOptimizerRun"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "spv_result_t spvOptimizerRun(spv_optimizer_t *, const uint32_t *, const size_t, spv_binary *, const spv_optimizer_options)"
- "name": "spvValidate"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "spv_result_t spvValidate(const spv_const_context, const spv_const_binary, spv_diagnostic *)"
- "name": "_ZN8spvtools3val36ValidateBinaryAndKeepValidationStateEPK13spv_context_tPK23spv_validator_options_tPKjmPP16spv_diagnostic_tPNSt3__110unique_ptrINS0_17ValidationState_tENSC_14default_deleteISE_EEEE"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "spv_result_t spvtools::val::ValidateBinaryAndKeepValidationState(const spv_const_context, spv_const_validator_options, const uint32_t *, const size_t, spv_diagnostic *, unique_ptr<spvtools::val::ValidationState_t, std::__1::default_delete<spvtools::val::ValidationState_t> > *)"
"language": "c++"
"project": "shaderc"
"target_name": "glslc_fuzzer"
"target_path": "/src/glslc_fuzzer.cc"
