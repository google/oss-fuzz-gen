"functions":
- "name": "bulkOperations"
  "params":
  - "name": "t"
    "type": "T"
  - "name": "operations"
    "type": "int"
  - "name": "insert"
    "type": "int"
  - "name": "update"
    "type": "int"
  - "name": "delete"
    "type": "int"
  "return_type": "void"
  "signature": "bulkOperations(*testing.T,int,int,int,int)"
- "name": "BenchmarkSparseMerkleTree_Delete"
  "params":
  - "name": "b"
    "type": "B"
  "return_type": "void"
  "signature": "BenchmarkSparseMerkleTree_Delete(*testing.B)"
- "name": "bulkCheckAll"
  "params":
  - "name": "t"
    "type": "T"
  - "name": "smt"
    "type": "*SparseMerkleTree"
  - "name": "kv"
    "type": "*map[string]string"
  "return_type": "void"
  "signature": "bulkCheckAll(*testing.T,*SparseMerkleTree,*map[string]string)"
- "name": "BenchmarkSparseMerkleTree_Update"
  "params":
  - "name": "b"
    "type": "B"
  "return_type": "void"
  "signature": "BenchmarkSparseMerkleTree_Update(*testing.B)"
- "name": "*SparseMerkleTree.DeleteForRoot"
  "params":
  - "name": "[]byte"
    "type": "[]byte"
  - "name": "error"
    "type": "error"
  - "name": "key"
    "type": "[]byte"
  "return_type": "([]byte, error)"
  "signature": "(*SparseMerkleTree) *SparseMerkleTree.DeleteForRoot([]byte,error,[]byte) ([]byte, error)"
"language": "go"
"project": "smt"
"target_name": "fuzz"
"target_path": "/src/smt/fuzz/delete/fuzz.go"
