"functions":
- "name": "_ZN8rawspeed19Cr2sRawInterpolator11interpolateEi"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  "return_type": "void"
  "signature": "void rawspeed::Cr2sRawInterpolator::interpolate(int)"
- "name": "_ZN8rawspeed17RawImageDataFloat15scaleBlackWhiteEv"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void rawspeed::RawImageDataFloat::scaleBlackWhite()"
- "name": "_ZNK8rawspeed10ByteStream9hasPrefixENSt3__117basic_string_viewIcNS1_11char_traitsIcEEEE"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  "return_type": "bool"
  "signature": "bool rawspeed::ByteStream::hasPrefix(string_view)"
- "name": "_ZN8rawspeed15VC5Decompressor7Wavelet18combineLowHighPassENS_10Array2DRefIKsEES4_ibb"
  "params":
  - "name": "low"
    "type": "bool "
  - "name": "high"
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "bool"
  - "name": ""
    "type": "bool"
  "return_type": "void"
  "signature": "struct BandData rawspeed::VC5Decompressor::Wavelet::combineLowHighPass(const Array2DRef<const short>, const Array2DRef<const short>, int, bool, bool)"
- "name": "_ZN8rawspeed15RawImageDataU1615scaleBlackWhiteEv"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void rawspeed::RawImageDataU16::scaleBlackWhite()"
- "name": "_ZN8rawspeed10Cr2Decoder15sRawInterpolateEv"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void rawspeed::Cr2Decoder::sRawInterpolate()"
- "name": "__kmpc_taskloop_5"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void __kmpc_taskloop_5(ident_t *, int, kmp_task_t *, int, kmp_uint64 *, kmp_uint64 *, kmp_int64, int, int, kmp_uint64, int, void *)"
- "name": "__kmpc_omp_target_task_alloc"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  "return_type": "void"
  "signature": "kmp_task_t * __kmpc_omp_target_task_alloc(ident_t *, kmp_int32, kmp_int32, size_t, size_t, kmp_routine_entry_t, kmp_int64)"
- "name": "_ZNK8rawspeed15VC5Decompressor24combineFinalLowpassBandsEv"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void rawspeed::VC5Decompressor::combineFinalLowpassBands()"
- "name": "__kmpc_taskloop"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void __kmpc_taskloop(ident_t *, int, kmp_task_t *, int, kmp_uint64 *, kmp_uint64 *, kmp_int64, int, int, kmp_uint64, void *)"
- "name": "_ZN8rawspeed15VC5Decompressor7Wavelet15reconstructPassENS_10Array2DRefIKsEES4_"
  "params":
  - "name": "high"
    "type": "bool "
  - "name": "low"
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "struct BandData rawspeed::VC5Decompressor::Wavelet::reconstructPass(const Array2DRef<const short>, const Array2DRef<const short>)"
"language": "c++"
"project": "librawspeed"
"target_name": "/src/librawspeed/fuzz/librawspeed/codes/PrefixCodeDecoder/Dual.cpp"
"target_path": "/src/librawspeed/fuzz/librawspeed/codes/PrefixCodeDecoder/Dual.cpp"
