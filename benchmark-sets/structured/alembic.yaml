"functions":
- "name": "Alembic::AbcCoreOgawa::v12::AprImpl::getSample(long,std::__1::shared_ptr<Alembic::AbcCoreAbstract::v12::ArraySample>&)"
  "param_names":
  - ""
  - ""
  - ""
  "param_types":
  - "class.Alembic::AbcCoreOgawa::v12::AprImpl *"
  - "size_t"
  - "class.std::__1::shared_ptr.20.211 *"
  "return_type": "void"
  "signature": "void Alembic::AbcCoreOgawa::v12::AprImpl::getSample(Alembic::AbcCoreOgawa::v12::AprImpl * , size_t , std::shared_ptr * )"
- "name": "Alembic::AbcCoreOgawa::v12::ReadArraySample(std::__1::shared_ptr<Alembic::Ogawa::v12::IData>,std::__1::shared_ptr<Alembic::Ogawa::v12::IData>,unsignedlong,Alembic::AbcCoreAbstract::v12::DataTypeconst&,std::__1::shared_ptr<Alembic::AbcCoreAbstract::v12::ArraySample>&)"
  "param_names":
  - "iDims"
  - "iData"
  - ""
  - ""
  - ""
  "param_types":
  - "class.std::__1::shared_ptr.88 *"
  - "class.std::__1::shared_ptr.88 *"
  - "size_t"
  - "class.Alembic::AbcCoreAbstract::v12::DataType *"
  - "class.std::__1::shared_ptr.20.211 *"
  "return_type": "void"
  "signature": "void Alembic::AbcCoreOgawa::v12::ReadArraySample(std::shared_ptr * iDims, std::shared_ptr * iData, size_t , Alembic::AbcCoreAbstract::v12::DataType * , std::shared_ptr * )"
- "name": "Alembic::AbcCoreFactory::v12::IFactory::getArchive(std::__1::vector<std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>,std::__1::allocator<std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>>>const&)"
  "param_names":
  - ""
  - ""
  - ""
  "param_types":
  - "class.Alembic::Abc::v12::IArchive *"
  - "class.Alembic::AbcCoreFactory::v12::IFactory *"
  - "class.std::__1::vector.78 *"
  "return_type": "void"
  "signature": "void Alembic::AbcCoreFactory::v12::IFactory::getArchive(Alembic::Abc::v12::IArchive * , Alembic::AbcCoreFactory::v12::IFactory * , std::vector * )"
- "name": "Alembic::AbcCoreFactory::v12::IFactory::getArchive(std::__1::vector<std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>,std::__1::allocator<std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>>>const&,Alembic::AbcCoreFactory::v12::IFactory::CoreType&)"
  "param_names":
  - ""
  - ""
  - ""
  - ""
  "param_types":
  - "class.Alembic::Abc::v12::IArchive *"
  - "class.Alembic::AbcCoreFactory::v12::IFactory *"
  - "class.std::__1::vector.78 *"
  - "int *"
  "return_type": "void"
  "signature": "void Alembic::AbcCoreFactory::v12::IFactory::getArchive(Alembic::Abc::v12::IArchive * , Alembic::AbcCoreFactory::v12::IFactory * , std::vector * , int * )"
- "name": "Alembic::AbcCoreOgawa::v12::SprImpl::getSample(long,void*)"
  "param_names":
  - ""
  - ""
  - ""
  "param_types":
  - "class.Alembic::AbcCoreOgawa::v12::SprImpl *"
  - "size_t"
  - "char *"
  "return_type": "void"
  "signature": "void Alembic::AbcCoreOgawa::v12::SprImpl::getSample(Alembic::AbcCoreOgawa::v12::SprImpl * , size_t , char * )"
"project": "alembic"
"target_name": "alembic_dump_info_fuzzer"
"target_path": "/src/alembic_dump_info_fuzzer.cc"
