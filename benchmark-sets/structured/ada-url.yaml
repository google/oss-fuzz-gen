"functions":
- "name": "ada_can_parse_with_base"
  "param_names":
  - "input"
  - "input_length"
  - "base"
  - "base_length"
  "param_types":
  - "char *"
  - "size_t"
  - "char *"
  - "size_t"
  "return_type": "bool"
  "signature": "bool ada_can_parse_with_base(char * input, size_t input_length, char * base, size_t base_length)"
- "name": "ada_can_parse"
  "param_names":
  - "input"
  - "length"
  "param_types":
  - "char *"
  - "size_t"
  "return_type": "bool"
  "signature": "bool ada_can_parse(char * input, size_t length)"
- "name": "ada_parse_with_base"
  "param_names":
  - "input"
  - "input_length"
  - "base"
  - "base_length"
  "param_types":
  - "char *"
  - "size_t"
  - "char *"
  - "size_t"
  "return_type": "char *"
  "signature": "char * ada_parse_with_base(char * input, size_t input_length, char * base, size_t base_length)"
- "name": "ada_set_href"
  "param_names":
  - "result"
  - "input"
  - "length"
  "param_types":
  - "char *"
  - "char *"
  - "size_t"
  "return_type": "bool"
  "signature": "bool ada_set_href(char * result, char * input, size_t length)"
- "name": "ada::url_aggregator::set_href(std::__1::basic_string_view<char,std::__1::char_traits<char>>)"
  "param_names":
  - "this"
  - "input"
  - ""
  "param_types":
  - "struct.ada::url_aggregator *"
  - "char *"
  - "size_t"
  "return_type": "bool"
  "signature": "bool ada::url_aggregator::set_href(struct ada::url_aggregator * this, char * input, size_t )"
"project": "ada-url"
"target_name": "parse"
"target_path": "/src/ada-url/fuzz/parse.cc"
