"functions":
- "name": "struct GumboInternalOutput * gumbo_parse(char * buffer)"
  "params":
  - "name": "buffer"
    "type": "char *"
  "return_type": "struct GumboInternalOutput *"
  "signature": "struct GumboInternalOutput * gumbo_parse(char * buffer)"
- "name": "void gumbo_print_caret_diagnostic(struct GumboInternalError * error, char * source_text, size_t source_length)"
  "params":
  - "name": "error"
    "type": "struct GumboInternalError *"
  - "name": "source_text"
    "type": "char *"
  - "name": "source_length"
    "type": "size_t"
  "return_type": "void"
  "signature": "void gumbo_print_caret_diagnostic(struct GumboInternalError * error, char * source_text, size_t source_length)"
- "name": "size_t gumbo_caret_diagnostic_to_string(struct GumboInternalError * error, char * source_text, size_t source_length, char ** output)"
  "params":
  - "name": "error"
    "type": "struct GumboInternalError *"
  - "name": "source_text"
    "type": "char *"
  - "name": "source_length"
    "type": "size_t"
  - "name": "output"
    "type": "char **"
  "return_type": "size_t"
  "signature": "size_t gumbo_caret_diagnostic_to_string(struct GumboInternalError * error, char * source_text, size_t source_length, char ** output)"
- "name": "void caret_diagnostic_to_string(struct GumboInternalError * error, char * source_text, size_t source_length, struct GumboStringBuffer * output)"
  "params":
  - "name": "error"
    "type": "struct GumboInternalError *"
  - "name": "source_text"
    "type": "char *"
  - "name": "source_length"
    "type": "size_t"
  - "name": "output"
    "type": "struct GumboStringBuffer *"
  "return_type": "void"
  "signature": "void caret_diagnostic_to_string(struct GumboInternalError * error, char * source_text, size_t source_length, struct GumboStringBuffer * output)"
- "name": "char * gumbo_error_code(struct GumboInternalError * error)"
  "params":
  - "name": "error"
    "type": "struct GumboInternalError *"
  "return_type": "char *"
  "signature": "char * gumbo_error_code(struct GumboInternalError * error)"
"language": "c"
"project": "nokogiri"
"target_name": "parse_fuzzer"
"target_path": "/src/nokogiri/gumbo-parser/fuzzer/parse_fuzzer.cc"
