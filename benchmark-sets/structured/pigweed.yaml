"functions":
- "name": "Read"
  "params":
  - "name": "this"
    "type": "pw::protobuf::StreamDecoder *"
  - "name": "message"
    "type": "size_t"
  - "name": "table"
    "type": "char *"
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "pw::protobuf::internal::MessageField *"
  "return_type": "int"
  "signature": "int pw::protobuf::StreamDecoder::Read(pw::protobuf::StreamDecoder * this, size_t message, char * table, size_t , pw::protobuf::internal::MessageField * )"
- "name": "Write"
  "params":
  - "name": "this"
    "type": "pw::protobuf::StreamEncoder *"
  - "name": "message"
    "type": "size_t"
  - "name": "table"
    "type": "char *"
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "pw::protobuf::internal::MessageField *"
  "return_type": "int"
  "signature": "int pw::protobuf::StreamEncoder::Write(pw::protobuf::StreamEncoder * this, size_t message, char * table, size_t , pw::protobuf::internal::MessageField * )"
- "name": "DetokenizeBase64"
  "params":
  - "name": "this"
    "type": "std::string *"
  - "name": "text"
    "type": "pw::tokenizer::Detokenizer *"
  - "name": ""
    "type": "char *"
  - "name": ""
    "type": "size_t"
  "return_type": "void"
  "signature": "void pw::tokenizer::Detokenizer::DetokenizeBase64(std::string * this, pw::tokenizer::Detokenizer * text, char * , size_t ) const"
- "name": "Detokenize"
  "params":
  - "name": "this"
    "type": "pw::tokenizer::(anonymous namespace)::NestedMessageDetokenizer *"
  - "name": "chunk"
    "type": "char *"
  - "name": ""
    "type": "size_t"
  "return_type": "void"
  "signature": "void pw::tokenizer::(pw::tokenizer::(anonymous namespace)::NestedMessageDetokenizer * this, char * chunk, size_t )"
- "name": "Detokenize"
  "params":
  - "name": "this"
    "type": "pw::tokenizer::(anonymous namespace)::NestedMessageDetokenizer *"
  - "name": "next_char"
    "type": "char"
  "return_type": "void"
  "signature": "void pw::tokenizer::(pw::tokenizer::(anonymous namespace)::NestedMessageDetokenizer * this, char next_char)"
"project": "pigweed"
"target_name": "encoder_fuzzer"
"target_path": "/src/pigweed/pw_protobuf/encoder_fuzzer.cc"
