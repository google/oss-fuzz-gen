"functions":
- "name": "handleEDNSClientSubnet(DNSQuestion&,bool&,bool&)"
  "param_names":
  - ""
  - ""
  - ""
  "param_types":
  - "struct.DNSQuestion *"
  - "char *"
  - "char *"
  "return_type": "bool"
  "signature": "bool handleEDNSClientSubnet(struct DNSQuestion * , char * , char * )"
- "name": "checkHostnameCorrectness(DNSResourceRecordconst&)"
  "param_names":
  - ""
  "param_types":
  - "class.DNSResourceRecord *"
  "return_type": "void"
  "signature": "void checkHostnameCorrectness(DNSResourceRecord * )"
- "name": "handleEDNSClientSubnet(std::__1::vector<unsignedchar,noinit_adaptor<std::__1::allocator<unsignedchar>>>&,unsignedlong,unsignedlong,bool&,bool&,bool,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>const&)"
  "param_names":
  - ""
  - ""
  - ""
  - ""
  - ""
  - ""
  - ""
  "param_types":
  - "class.std::__1::vector.51 *"
  - "size_t"
  - "size_t"
  - "char *"
  - "char *"
  - "bool"
  - "class.std::__1::basic_string *"
  "return_type": "bool"
  "signature": "bool handleEDNSClientSubnet(std::vector * , size_t , size_t , char * , char * , bool , std::string * )"
- "name": "setEDNSOption(DNSQuestion&,unsignedshort,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>const&)"
  "param_names":
  - ""
  - ""
  - ""
  "param_types":
  - "struct.DNSQuestion *"
  - "short"
  - "class.std::__1::basic_string *"
  "return_type": "bool"
  "signature": "bool setEDNSOption(struct DNSQuestion * , short , std::string * )"
- "name": "RecordTextReader::xfrSvcParamKeyVals(std::__1::set<SvcParam,std::__1::less<SvcParam>,std::__1::allocator<SvcParam>>&)"
  "param_names":
  - ""
  - ""
  "param_types":
  - "class.RecordTextReader *"
  - "class.std::__1::set.106 *"
  "return_type": "void"
  "signature": "void RecordTextReader::xfrSvcParamKeyVals(RecordTextReader * , std::set * )"
"project": "powerdns"
"target_name": "standalone_fuzz_target_runner"
"target_path": "/src/pdns/pdns/standalone_fuzz_target_runner.cc"
