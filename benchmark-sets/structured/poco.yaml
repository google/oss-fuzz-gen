"functions":
- "name": "Poco::RegularExpression::match(std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>const&,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>const&,int)"
  "param_names":
  - ""
  - ""
  - ""
  "param_types":
  - "class.std::__1::basic_string *"
  - "class.std::__1::basic_string *"
  - "int"
  "return_type": "bool"
  "signature": "bool Poco::RegularExpression::match(std::string * , std::string * , int )"
- "name": "Poco::RegularExpression::split(std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>const&,unsignedlong,std::__1::vector<std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>,std::__1::allocator<std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>>>&,int)const"
  "param_names":
  - ""
  - ""
  - ""
  - ""
  - ""
  "param_types":
  - "class.Poco::RegularExpression *"
  - "class.std::__1::basic_string *"
  - "size_t"
  - "class.std::__1::vector.56 *"
  - "int"
  "return_type": "int"
  "signature": "int Poco::RegularExpression::split(Poco::RegularExpression * , std::string * , size_t , std::vector * , int ) const"
- "name": "Poco::RegularExpression::subst(std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>&,unsignedlong,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>const&,int)const"
  "param_names":
  - ""
  - ""
  - ""
  - ""
  - ""
  "param_types":
  - "class.Poco::RegularExpression *"
  - "class.std::__1::basic_string *"
  - "size_t"
  - "class.std::__1::basic_string *"
  - "int"
  "return_type": "int"
  "signature": "int Poco::RegularExpression::subst(Poco::RegularExpression * , std::string * , size_t , std::string * , int ) const"
- "name": "Poco::RegularExpression::substOne(std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>&,unsignedlong,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>const&,int)const"
  "param_names":
  - ""
  - ""
  - ""
  - ""
  - ""
  "param_types":
  - "class.Poco::RegularExpression *"
  - "class.std::__1::basic_string *"
  - "size_t"
  - "class.std::__1::basic_string *"
  - "int"
  "return_type": "size_t"
  "signature": "size_t Poco::RegularExpression::substOne(Poco::RegularExpression * , std::string * , size_t , std::string * , int ) const"
- "name": "Poco::RegularExpression::match(std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>const&,unsignedlong,int)const"
  "param_names":
  - ""
  - ""
  - ""
  - ""
  "param_types":
  - "class.Poco::RegularExpression *"
  - "class.std::__1::basic_string *"
  - "size_t"
  - "int"
  "return_type": "bool"
  "signature": "bool Poco::RegularExpression::match(Poco::RegularExpression * , std::string * , size_t , int ) const"
"project": "poco"
"target_name": "json_parser_fuzzer"
"target_path": "/src/json_parse_fuzzer.cc"
