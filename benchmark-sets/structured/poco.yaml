"functions":
- "name": "match"
  "params":
  - "name": ""
    "type": "std::string *"
  - "name": ""
    "type": "std::string *"
  - "name": ""
    "type": "int"
  "return_type": "bool"
  "signature": "bool Poco::RegularExpression::match(std::string * , std::string * , int )"
- "name": "split"
  "params":
  - "name": ""
    "type": "Poco::RegularExpression *"
  - "name": ""
    "type": "std::string *"
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "std::vector *"
  - "name": ""
    "type": "int"
  "return_type": "int"
  "signature": "int Poco::RegularExpression::split(Poco::RegularExpression * , std::string * , size_t , std::vector * , int ) const"
- "name": "subst"
  "params":
  - "name": ""
    "type": "Poco::RegularExpression *"
  - "name": ""
    "type": "std::string *"
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "std::string *"
  - "name": ""
    "type": "int"
  "return_type": "int"
  "signature": "int Poco::RegularExpression::subst(Poco::RegularExpression * , std::string * , size_t , std::string * , int ) const"
- "name": "substOne"
  "params":
  - "name": ""
    "type": "Poco::RegularExpression *"
  - "name": ""
    "type": "std::string *"
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "std::string *"
  - "name": ""
    "type": "int"
  "return_type": "size_t"
  "signature": "size_t Poco::RegularExpression::substOne(Poco::RegularExpression * , std::string * , size_t , std::string * , int ) const"
- "name": "match"
  "params":
  - "name": ""
    "type": "Poco::RegularExpression *"
  - "name": ""
    "type": "std::string *"
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "int"
  "return_type": "bool"
  "signature": "bool Poco::RegularExpression::match(Poco::RegularExpression * , std::string * , size_t , int ) const"
"project": "poco"
"target_name": "json_parser_fuzzer"
"target_path": "/src/json_parse_fuzzer.cc"
