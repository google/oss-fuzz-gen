"functions":
- "name": "Poco::RegularExpression::match(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)"
  "params":
  - "name": ""
    "type": "std::string *"
  - "name": ""
    "type": "std::string *"
  - "name": ""
    "type": "int"
  "return_type": "bool"
  "signature": "Poco::RegularExpression::match(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)"
- "name": "Poco::RegularExpression::split(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&, int) const"
  "params":
  - "name": ""
    "type": "Poco::RegularExpression *"
  - "name": ""
    "type": "std::string *"
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "std::vector *"
  - "name": ""
    "type": "int"
  "return_type": "int"
  "signature": "Poco::RegularExpression::split(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&, int) const"
- "name": "Poco::RegularExpression::subst(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) const"
  "params":
  - "name": ""
    "type": "Poco::RegularExpression *"
  - "name": ""
    "type": "std::string *"
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "std::string *"
  - "name": ""
    "type": "int"
  "return_type": "int"
  "signature": "Poco::RegularExpression::subst(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) const"
- "name": "Poco::RegularExpression::substOne(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) const"
  "params":
  - "name": ""
    "type": "Poco::RegularExpression *"
  - "name": ""
    "type": "std::string *"
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "std::string *"
  - "name": ""
    "type": "int"
  "return_type": "size_t"
  "signature": "Poco::RegularExpression::substOne(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) const"
- "name": "Poco::RegularExpression::match(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, int) const"
  "params":
  - "name": ""
    "type": "Poco::RegularExpression *"
  - "name": ""
    "type": "std::string *"
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "int"
  "return_type": "bool"
  "signature": "Poco::RegularExpression::match(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, int) const"
"language": "c++"
"project": "poco"
"target_name": "json_parser_fuzzer"
"target_path": "/src/json_parse_fuzzer.cc"
