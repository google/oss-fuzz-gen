"functions":
- "name": "std::__1::tuple<unsignedint,immer::detail::rbts::node<int,immer::memory_policy<immer::heap_policy<immer::cpp_heap>,immer::unsafe_refcount_policy,immer::no_lock_policy,immer::no_transience_policy,false,true>,2u,2u>*,unsignedint,immer::detail::rbts::node<int,immer::memory_policy<immer::heap_policy<immer::cpp_heap>,immer::unsafe_refcount_policy,immer::no_lock_policy,immer::no_transience_policy,false,true>,2u,2u>*>immer::detail::rbts::slice_right_mut_visitor<immer::detail::rbts::node<int,immer::memory_policy<immer::heap_policy<immer::cpp_heap>,immer::unsafe_refcount_policy,immer::no_lock_policy,immer::no_transience_policy,false,true>,2u,2u>,true,true>::visit_regular<immer::detail::rbts::regular_pos<immer::detail::rbts::node<int,immer::memory_policy<immer::heap_policy<immer::cpp_heap>,immer::unsafe_refcount_policy,immer::no_lock_policy,immer::no_transience_policy,false,true>,2u,2u>>&>(immer::detail::rbts::regular_pos<immer::detail::rbts::node<int,immer::memory_policy<immer::heap_policy<immer::cpp_heap>,immer::unsafe_refcount_policy,immer::no_lock_policy,immer::no_transience_policy,false,true>,2u,2u>>&,unsignedlong,immer::no_transience_policy::apply<immer::heap_policy<immer::cpp_heap>>::type::edit)"
  "param_names":
  - "pos"
  - "last"
  - "e"
  "param_types":
  - "class.std::__1::tuple *"
  - "struct.immer::detail::rbts::regular_sub_pos *"
  - "size_t"
  "return_type": "void"
  "signature": "void std::__1::tuple<unsigned int, immer::detail::rbts::node<int, immer::memory_policy<immer::heap_policy<immer::cpp_heap>, immer::unsafe_refcount_policy, immer::no_lock_policy, immer::no_transience_policy, false, true>, 2u, 2u>*, unsigned int, immer::detail::rbts::node<int, immer::memory_policy<immer::heap_policy<immer::cpp_heap>, immer::unsafe_refcount_policy, immer::no_lock_policy, immer::no_transience_policy, false, true>, 2u, 2u>*> immer::detail::rbts::slice_right_mut_visitor<immer::detail::rbts::node<int, immer::memory_policy<immer::heap_policy<immer::cpp_heap>, immer::unsafe_refcount_policy, immer::no_lock_policy, immer::no_transience_policy, false, true>, 2u, 2u>, true, true>::visit_regular<immer::detail::rbts::regular_pos<immer::detail::rbts::node<int, immer::memory_policy<immer::heap_policy<immer::cpp_heap>, immer::unsafe_refcount_policy, immer::no_lock_policy, immer::no_transience_policy, false, true>, 2u, 2u> >&>(std::tuple * pos, struct immer::detail::rbts::regular_sub_pos * last, size_t e)"
- "name": "decltype(auto)immer::detail::rbts::towards_oh_ch_regular<immer::detail::rbts::regular_pos<immer::detail::rbts::node<int,immer::memory_policy<immer::heap_policy<immer::cpp_heap>,immer::unsafe_refcount_policy,immer::no_lock_policy,immer::no_transience_policy,false,true>,2u,2u>>&,immer::detail::rbts::slice_right_mut_visitor<immer::detail::rbts::node<int,immer::memory_policy<immer::heap_policy<immer::cpp_heap>,immer::unsafe_refcount_policy,immer::no_lock_policy,immer::no_transience_policy,false,true>,2u,2u>,true,true>,immer::no_transience_policy::apply<immer::heap_policy<immer::cpp_heap>>::type::edit&>(immer::detail::rbts::regular_pos<immer::detail::rbts::node<int,immer::memory_policy<immer::heap_policy<immer::cpp_heap>,immer::unsafe_refcount_policy,immer::no_lock_policy,immer::no_transience_policy,false,true>,2u,2u>>&,immer::detail::rbts::slice_right_mut_visitor<immer::detail::rbts::node<int,immer::memory_policy<immer::heap_policy<immer::cpp_heap>,immer::unsafe_refcount_policy,immer::no_lock_policy,immer::no_transience_policy,false,true>,2u,2u>,true,true>,unsignedlong,unsignedint,unsignedint,immer::no_transience_policy::apply<immer::heap_policy<immer::cpp_heap>>::type::edit&)"
  "param_names":
  - "p"
  - "v"
  - "idx"
  - "offset_hint"
  - "count_hint"
  - "args"
  "param_types":
  - "class.std::__1::tuple *"
  - "struct.immer::detail::rbts::regular_sub_pos *"
  - "size_t"
  - "int"
  - "int"
  - "struct.immer::detail::rbts::dec_visitor *"
  "return_type": "void"
  "signature": "void decltype(std::tuple * p, struct immer::detail::rbts::regular_sub_pos * v, size_t idx, int offset_hint, int count_hint, struct immer::detail::rbts::dec_visitor * args)"
- "name": "decltype(auto)immer::detail::rbts::regular_pos<immer::detail::rbts::node<int,immer::memory_policy<immer::heap_policy<immer::cpp_heap>,immer::unsafe_refcount_policy,immer::no_lock_policy,immer::no_transience_policy,false,true>,2u,2u>>::visit<immer::detail::rbts::slice_right_mut_visitor<immer::detail::rbts::node<int,immer::memory_policy<immer::heap_policy<immer::cpp_heap>,immer::unsafe_refcount_policy,immer::no_lock_policy,immer::no_transience_policy,false,true>,2u,2u>,true,true>,unsignedlong&,immer::no_transience_policy::apply<immer::heap_policy<immer::cpp_heap>>::type::edit&>(immer::detail::rbts::slice_right_mut_visitor<immer::detail::rbts::node<int,immer::memory_policy<immer::heap_policy<immer::cpp_heap>,immer::unsafe_refcount_policy,immer::no_lock_policy,immer::no_transience_policy,false,true>,2u,2u>,true,true>,unsignedlong&,immer::no_transience_policy::apply<immer::heap_policy<immer::cpp_heap>>::type::edit&)"
  "param_names":
  - "this"
  - "v"
  - "args"
  - "args"
  "param_types":
  - "class.std::__1::tuple *"
  - "struct.immer::detail::rbts::regular_sub_pos *"
  - "size_t *"
  - "struct.immer::detail::rbts::dec_visitor *"
  "return_type": "void"
  "signature": "void decltype(std::tuple * this, struct immer::detail::rbts::regular_sub_pos * v, size_t * args, struct immer::detail::rbts::dec_visitor * args)"
- "name": "decltype(auto)immer::detail::rbts::regular_pos<immer::detail::rbts::node<int,immer::memory_policy<immer::heap_policy<immer::cpp_heap>,immer::unsafe_refcount_policy,immer::no_lock_policy,immer::no_transience_policy,false,true>,2u,2u>>::towards_oh<immer::detail::rbts::slice_right_mut_visitor<immer::detail::rbts::node<int,immer::memory_policy<immer::heap_policy<immer::cpp_heap>,immer::unsafe_refcount_policy,immer::no_lock_policy,immer::no_transience_policy,false,true>,2u,2u>,true,true>,immer::no_transience_policy::apply<immer::heap_policy<immer::cpp_heap>>::type::edit&>(immer::detail::rbts::slice_right_mut_visitor<immer::detail::rbts::node<int,immer::memory_policy<immer::heap_policy<immer::cpp_heap>,immer::unsafe_refcount_policy,immer::no_lock_policy,immer::no_transience_policy,false,true>,2u,2u>,true,true>,unsignedlong,unsignedint,immer::no_transience_policy::apply<immer::heap_policy<immer::cpp_heap>>::type::edit&)"
  "param_names":
  - "this"
  - "v"
  - "idx"
  - "offset_hint"
  - "args"
  "param_types":
  - "class.std::__1::tuple *"
  - "struct.immer::detail::rbts::regular_sub_pos *"
  - "size_t"
  - "int"
  - "struct.immer::detail::rbts::dec_visitor *"
  "return_type": "void"
  "signature": "void decltype(std::tuple * this, struct immer::detail::rbts::regular_sub_pos * v, size_t idx, int offset_hint, struct immer::detail::rbts::dec_visitor * args)"
- "name": "decltype(auto)immer::detail::rbts::relaxed_pos<immer::detail::rbts::node<int,immer::memory_policy<immer::heap_policy<immer::gc_heap>,immer::no_refcount_policy,immer::spinlock_policy,immer::gc_transience_policy,false,false>,2u,2u>>::last_sub<immer::detail::rbts::concat_left_mut_visitor<immer::detail::rbts::node<int,immer::memory_policy<immer::heap_policy<immer::gc_heap>,immer::no_refcount_policy,immer::spinlock_policy,immer::gc_transience_policy,false,false>,2u,2u>>,immer::gc_transience_policy::apply<immer::heap_policy<immer::gc_heap>>::type::edit&,immer::gc_transience_policy::apply<immer::heap_policy<immer::gc_heap>>::type::edit&,immer::detail::rbts::leaf_pos<immer::detail::rbts::node<int,immer::memory_policy<immer::heap_policy<immer::gc_heap>,immer::no_refcount_policy,immer::spinlock_policy,immer::gc_transience_policy,false,false>,2u,2u>>&,immer::gc_transience_policy::apply<immer::heap_policy<immer::gc_heap>>::type::edit&,immer::detail::rbts::full_pos<immer::detail::rbts::node<int,immer::memory_policy<immer::heap_policy<immer::gc_heap>,immer::no_refcount_policy,immer::spinlock_policy,immer::gc_transience_policy,false,false>,2u,2u>>&>(immer::detail::rbts::concat_left_mut_visitor<immer::detail::rbts::node<int,immer::memory_policy<immer::heap_policy<immer::gc_heap>,immer::no_refcount_policy,immer::spinlock_policy,immer::gc_transience_policy,false,false>,2u,2u>>,immer::gc_transience_policy::apply<immer::heap_policy<immer::gc_heap>>::type::edit&,immer::gc_transience_policy::apply<immer::heap_policy<immer::gc_heap>>::type::edit&,immer::detail::rbts::leaf_pos<immer::detail::rbts::node<int,immer::memory_policy<immer::heap_policy<immer::gc_heap>,immer::no_refcount_policy,immer::spinlock_policy,immer::gc_transience_policy,false,false>,2u,2u>>&,immer::gc_transience_policy::apply<immer::heap_policy<immer::gc_heap>>::type::edit&,immer::detail::rbts::full_pos<immer::detail::rbts::node<int,immer::memory_policy<immer::heap_policy<immer::gc_heap>,immer::no_refcount_policy,immer::spinlock_policy,immer::gc_transience_policy,false,false>,2u,2u>>&)"
  "param_names":
  - "this"
  - "v"
  - "args"
  - "args"
  - "args"
  - "args"
  - "args"
  "param_types":
  - "struct.immer::detail::rbts::concat_center_pos *"
  - "struct.immer::detail::rbts::relaxed_pos *"
  - "struct.std::__1::__cxx_atomic_base_impl *"
  - "struct.std::__1::__cxx_atomic_base_impl *"
  - "struct.immer::detail::rbts::leaf_pos *"
  - "struct.std::__1::__cxx_atomic_base_impl *"
  - "struct.immer::detail::rbts::leaf_sub_pos *"
  "return_type": "void"
  "signature": "void decltype(struct immer::detail::rbts::concat_center_pos * this, struct immer::detail::rbts::relaxed_pos * v, struct std::__cxx_atomic_base_impl * args, struct std::__cxx_atomic_base_impl * args, struct immer::detail::rbts::leaf_pos * args, struct std::__cxx_atomic_base_impl * args, struct immer::detail::rbts::leaf_sub_pos * args)"
"project": "immer"
"target_name": "vector"
"target_path": "/src/immer/extra/fuzzer/vector.cpp"
