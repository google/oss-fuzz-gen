"functions":
- "name": "encoder_encode"
  "params":
  - "name": ""
    "type": "struct aom_codec_alg_priv *"
  - "name": ""
    "type": "struct aom_image *"
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "size_t"
  "return_type": "int"
  "signature": "int encoder_encode(struct aom_codec_alg_priv * , struct aom_image * , size_t , size_t , size_t )"
- "name": "av1_compress_parallel_frames"
  "params":
  - "name": ""
    "type": "struct AV1_PRIMARY *"
  - "name": ""
    "type": "struct AV1_COMP_DATA *"
  "return_type": "int"
  "signature": "int av1_compress_parallel_frames(struct AV1_PRIMARY * , struct AV1_COMP_DATA * )"
- "name": "prepare_fpmt_workers"
  "params":
  - "name": ""
    "type": "struct AV1_PRIMARY *"
  - "name": ""
    "type": "struct AV1_COMP_DATA *"
  - "name": ""
    "type": "int"
  "return_type": "void"
  "signature": "void prepare_fpmt_workers(struct AV1_PRIMARY * , struct AV1_COMP_DATA * , int )"
- "name": "get_compressed_data_hook"
  "params":
  - "name": ""
    "type": "char *"
  - "name": ""
    "type": "char *"
  "return_type": "int"
  "signature": "int get_compressed_data_hook(char * , char * )"
- "name": "av1_get_compressed_data"
  "params":
  - "name": ""
    "type": "struct AV1_COMP *"
  - "name": ""
    "type": "struct AV1_COMP_DATA *"
  "return_type": "int"
  "signature": "int av1_get_compressed_data(struct AV1_COMP * , struct AV1_COMP_DATA * )"
"project": "libavif"
"target_name": "av1_dec_fuzzer"
"target_path": "/src/libavif/ext/aom/examples/av1_dec_fuzzer.cc"
