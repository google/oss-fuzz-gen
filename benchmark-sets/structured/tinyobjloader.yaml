"functions":
- "name": "tinyobj::ObjReader::ParseFromFile(std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>const&,tinyobj::ObjReaderConfigconst&)"
  "param_names":
  - "this"
  - "filename"
  - "config"
  "param_types":
  - "class.tinyobj::ObjReader *"
  - "class.std::__1::basic_string *"
  - "struct.tinyobj::ObjReaderConfig *"
  "return_type": "bool"
  "signature": "bool tinyobj::ObjReader::ParseFromFile(tinyobj::ObjReader * this, std::string * filename, struct tinyobj::ObjReaderConfig * config)"
- "name": "tinyobj::LoadObj(tinyobj::attrib_t*,std::__1::vector<tinyobj::shape_t,std::__1::allocator<tinyobj::shape_t>>*,std::__1::vector<tinyobj::material_t,std::__1::allocator<tinyobj::material_t>>*,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>*,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>*,charconst*,charconst*,bool,bool)"
  "param_names":
  - "attrib"
  - "shapes"
  - "materials"
  - "warn"
  - "err"
  - "filename"
  - "mtl_basedir"
  - "triangulate"
  - "default_vcols_fallback"
  "param_types":
  - "struct.tinyobj::attrib_t *"
  - "class.std::__1::vector.63 *"
  - "class.std::__1::vector *"
  - "class.std::__1::basic_string *"
  - "class.std::__1::basic_string *"
  - "char *"
  - "char *"
  - "bool"
  - "bool"
  "return_type": "bool"
  "signature": "bool tinyobj::LoadObj(struct tinyobj::attrib_t * attrib, std::vector * shapes, std::vector * materials, std::string * warn, std::string * err, char * filename, char * mtl_basedir, bool triangulate, bool default_vcols_fallback)"
- "name": "tinyobj::MaterialFileReader::operator()(std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>const&,std::__1::vector<tinyobj::material_t,std::__1::allocator<tinyobj::material_t>>*,std::__1::map<std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>,int,std::__1::less<std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>>,std::__1::allocator<std::__1::pair<std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>const,int>>>*,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>*,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>*)"
  "param_names":
  - "this"
  - "matId"
  - "materials"
  - "matMap"
  - "warn"
  - "err"
  "param_types":
  - "class.tinyobj::MaterialFileReader *"
  - "class.std::__1::basic_string *"
  - "class.std::__1::vector *"
  - "class.std::__1::map.11 *"
  - "class.std::__1::basic_string *"
  - "class.std::__1::basic_string *"
  "return_type": "bool"
  "signature": "bool tinyobj::MaterialFileReader::operator(tinyobj::MaterialFileReader * this, std::string * matId, std::vector * materials, std::map * matMap, std::string * warn, std::string * err)"
- "name": "tinyobj::LoadObjWithCallback(std::__1::basic_istream<char,std::__1::char_traits<char>>&,tinyobj::callback_tconst&,void*,tinyobj::MaterialReader*,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>*,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>*)"
  "param_names":
  - "inStream"
  - "callback"
  - "user_data"
  - "readMatFn"
  - "warn"
  - "err"
  "param_types":
  - "class.std::__1::basic_istream *"
  - "struct.tinyobj::callback_t *"
  - "char *"
  - "class.std::exception *"
  - "class.std::__1::basic_string *"
  - "class.std::__1::basic_string *"
  "return_type": "bool"
  "signature": "bool tinyobj::LoadObjWithCallback(std::istream * inStream, struct tinyobj::callback_t * callback, char * user_data, std::exception * readMatFn, std::string * warn, std::string * err)"
- "name": "tinyobj::material_t::material_t(tinyobj::material_tconst&)"
  "param_names":
  - "this"
  - ""
  "param_types":
  - "struct.tinyobj::material_t *"
  - "struct.tinyobj::material_t *"
  "return_type": "void"
  "signature": "void tinyobj::material_t::material_t(struct tinyobj::material_t * this, struct tinyobj::material_t * )"
"project": "tinyobjloader"
"target_name": "fuzz_ParseFromString"
"target_path": "/src/tinyobjloader/fuzzer/fuzz_ParseFromString.cc"
