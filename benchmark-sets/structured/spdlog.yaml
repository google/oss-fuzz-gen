"functions":
- "name": "std::__1::back_insert_iterator<fmt::v9::basic_memory_buffer<char,250ul,std::__1::allocator<char>>>fmt::v9::vformat_to<std::__1::back_insert_iterator<fmt::v9::basic_memory_buffer<char,250ul,std::__1::allocator<char>>>,0>(std::__1::back_insert_iterator<fmt::v9::basic_memory_buffer<char,250ul,std::__1::allocator<char>>>,fmt::v9::basic_string_view<char>,fmt::v9::basic_format_args<fmt::v9::basic_format_context<fmt::v9::appender,char>>)"
  "param_names":
  - ""
  - ""
  - ""
  - ""
  - ""
  "param_types":
  - "class.fmt::v9::basic_memory_buffer *"
  - "char *"
  - "size_t"
  - "size_t"
  - "class.fmt::v9::detail::value *"
  "return_type": "class.fmt::v9::basic_memory_buffer *"
  "signature": "fmt::v9::basic_memory_buffer * std::__1::back_insert_iterator<fmt::v9::basic_memory_buffer<char, 250ul, std::__1::allocator<char> > > fmt::v9::vformat_to<std::__1::back_insert_iterator<fmt::v9::basic_memory_buffer<char, 250ul, std::__1::allocator<char> > >, 0>(fmt::v9::basic_memory_buffer * , char * , size_t , size_t , fmt::v9::detail::value * )"
- "name": "intfmt::v9::detail::format_float<double>(double,int,fmt::v9::detail::float_specs,fmt::v9::detail::buffer<char>&)"
  "param_names":
  - ""
  - ""
  - ""
  - ""
  "param_types":
  - "double"
  - "int"
  - "size_t"
  - "class.fmt::v9::detail::buffer *"
  "return_type": "int"
  "signature": "int fmt::v9::detail::format_float<double>(double , int , size_t , fmt::v9::detail::buffer * )"
- "name": "spdlog::sinks::base_sink<std::__1::mutex>::set_pattern_(std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>const&)"
  "param_names":
  - ""
  - ""
  "param_types":
  - "class.spdlog::sinks::base_sink *"
  - "class.std::__1::basic_string *"
  "return_type": "void"
  "signature": "void spdlog::sinks::base_sink<std::__1::mutex>::set_pattern_(spdlog::sinks::base_sink * , std::string * )"
- "name": "spdlog::sinks::ansicolor_sink<spdlog::details::console_mutex>::set_pattern(std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>const&)"
  "param_names":
  - ""
  - ""
  "param_types":
  - "class.spdlog::sinks::ansicolor_sink *"
  - "class.std::__1::basic_string *"
  "return_type": "void"
  "signature": "void spdlog::sinks::ansicolor_sink<spdlog::details::console_mutex>::set_pattern(spdlog::sinks::ansicolor_sink * , std::string * )"
- "name": "std::__1::unique_ptr<spdlog::pattern_formatter,std::__1::default_delete<spdlog::pattern_formatter>>spdlog::details::make_unique<spdlog::pattern_formatter,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>const&>(std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>const&)"
  "param_names":
  - ""
  - ""
  "param_types":
  - "class.std::__1::unique_ptr.44 *"
  - "class.std::__1::basic_string *"
  "return_type": "void"
  "signature": "void std::__1::unique_ptr<spdlog::pattern_formatter, std::__1::default_delete<spdlog::pattern_formatter> > spdlog::details::make_unique<spdlog::pattern_formatter, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::unique_ptr * , std::string * )"
"project": "spdlog"
"target_name": "log_fuzzer"
"target_path": "/src/log_fuzzer.cc"
