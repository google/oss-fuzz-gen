"functions":
- "name": "booltao::pegtl::normal<tao::pegtl::list<usbguard::RuleParser::condition,tao::pegtl::plus<tao::pegtl::ascii::blank>,void>>::match<(tao::pegtl::apply_mode)1,(tao::pegtl::rewind_mode)0,usbguard::RuleParser::condition_actions,tao::pegtl::state_control<tao::pegtl::normal>::type,tao::pegtl::string_input<(tao::pegtl::tracking_mode)0,tao::pegtl::ascii::eol::lf_crlf,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>>,usbguard::Rule&,tao::pegtl::tracer<tao::pegtl::tracer_traits<false,true,2ul,8ul>>&>(tao::pegtl::string_input<(tao::pegtl::tracking_mode)0,tao::pegtl::ascii::eol::lf_crlf,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>>&,usbguard::Rule&,tao::pegtl::tracer<tao::pegtl::tracer_traits<false,true,2ul,8ul>>&)"
  "param_names":
  - ""
  - ""
  - ""
  "param_types":
  - "struct.tao::pegtl::string_input *"
  - "class.usbguard::Rule *"
  - "struct.tao::pegtl::tracer *"
  "return_type": "bool"
  "signature": "bool tao::pegtl::normal<tao::pegtl::list<usbguard::RuleParser::condition, tao::pegtl::plus<tao::pegtl::ascii::blank>, void> >::match<(struct tao::pegtl::string_input * , usbguard::Rule * , struct tao::pegtl::tracer * )"
- "name": "autotao::pegtl::match<tao::pegtl::list<usbguard::RuleParser::condition,tao::pegtl::plus<tao::pegtl::ascii::blank>,void>,(tao::pegtl::apply_mode)1,(tao::pegtl::rewind_mode)0,usbguard::RuleParser::condition_actions,tao::pegtl::state_control<tao::pegtl::normal>::type,tao::pegtl::string_input<(tao::pegtl::tracking_mode)0,tao::pegtl::ascii::eol::lf_crlf,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>>,usbguard::Rule&,tao::pegtl::tracer<tao::pegtl::tracer_traits<false,true,2ul,8ul>>&>(tao::pegtl::string_input<(tao::pegtl::tracking_mode)0,tao::pegtl::ascii::eol::lf_crlf,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>>&,usbguard::Rule&,tao::pegtl::tracer<tao::pegtl::tracer_traits<false,true,2ul,8ul>>&)"
  "param_names":
  - ""
  - ""
  - ""
  "param_types":
  - "struct.tao::pegtl::string_input *"
  - "class.usbguard::Rule *"
  - "struct.tao::pegtl::tracer *"
  "return_type": "bool"
  "signature": "bool auto tao::pegtl::match<tao::pegtl::list<usbguard::RuleParser::condition, tao::pegtl::plus<tao::pegtl::ascii::blank>, void>, (struct tao::pegtl::string_input * , usbguard::Rule * , struct tao::pegtl::tracer * )"
- "name": "autotao::pegtl::internal::match_control_unwind<tao::pegtl::list<usbguard::RuleParser::condition,tao::pegtl::plus<tao::pegtl::ascii::blank>,void>,(tao::pegtl::apply_mode)1,(tao::pegtl::rewind_mode)0,usbguard::RuleParser::condition_actions,tao::pegtl::state_control<tao::pegtl::normal>::type,tao::pegtl::string_input<(tao::pegtl::tracking_mode)0,tao::pegtl::ascii::eol::lf_crlf,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>>,usbguard::Rule&,tao::pegtl::tracer<tao::pegtl::tracer_traits<false,true,2ul,8ul>>&>(tao::pegtl::string_input<(tao::pegtl::tracking_mode)0,tao::pegtl::ascii::eol::lf_crlf,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>>&,usbguard::Rule&,tao::pegtl::tracer<tao::pegtl::tracer_traits<false,true,2ul,8ul>>&)"
  "param_names":
  - ""
  - ""
  - ""
  "param_types":
  - "struct.tao::pegtl::string_input *"
  - "class.usbguard::Rule *"
  - "struct.tao::pegtl::tracer *"
  "return_type": "bool"
  "signature": "bool auto tao::pegtl::internal::match_control_unwind<tao::pegtl::list<usbguard::RuleParser::condition, tao::pegtl::plus<tao::pegtl::ascii::blank>, void>, (struct tao::pegtl::string_input * , usbguard::Rule * , struct tao::pegtl::tracer * )"
- "name": "decltype(tao::pegtl::list<usbguard::RuleParser::condition,tao::pegtl::plus<tao::pegtl::ascii::blank>,void>::match<(tao::pegtl::apply_mode)1,(tao::pegtl::rewind_mode)0,usbguard::RuleParser::condition_actions,tao::pegtl::state_control<tao::pegtl::normal>::type>({parm#1},{parm#2}...))tao::pegtl::internal::match_no_control<tao::pegtl::list<usbguard::RuleParser::condition,tao::pegtl::plus<tao::pegtl::ascii::blank>,void>,(tao::pegtl::apply_mode)1,(tao::pegtl::rewind_mode)0,usbguard::RuleParser::condition_actions,tao::pegtl::state_control<tao::pegtl::normal>::type,tao::pegtl::string_input<(tao::pegtl::tracking_mode)0,tao::pegtl::ascii::eol::lf_crlf,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>>,usbguard::Rule&,tao::pegtl::tracer<tao::pegtl::tracer_traits<false,true,2ul,8ul>>&>(tao::pegtl::string_input<(tao::pegtl::tracking_mode)0,tao::pegtl::ascii::eol::lf_crlf,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>>&,usbguard::Rule&,tao::pegtl::tracer<tao::pegtl::tracer_traits<false,true,2ul,8ul>>&)"
  "param_names":
  - ""
  - ""
  - ""
  "param_types":
  - "struct.tao::pegtl::string_input *"
  - "class.usbguard::Rule *"
  - "struct.tao::pegtl::tracer *"
  "return_type": "bool"
  "signature": "bool decltype (struct tao::pegtl::string_input * , usbguard::Rule * , struct tao::pegtl::tracer * )"
- "name": "booltao::pegtl::internal::seq<usbguard::RuleParser::condition,tao::pegtl::internal::star<tao::pegtl::plus<tao::pegtl::ascii::blank>,usbguard::RuleParser::condition>>::match<(tao::pegtl::apply_mode)1,(tao::pegtl::rewind_mode)0,usbguard::RuleParser::condition_actions,tao::pegtl::state_control<tao::pegtl::normal>::type,tao::pegtl::string_input<(tao::pegtl::tracking_mode)0,tao::pegtl::ascii::eol::lf_crlf,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>>,usbguard::Rule&,tao::pegtl::tracer<tao::pegtl::tracer_traits<false,true,2ul,8ul>>&>(tao::pegtl::string_input<(tao::pegtl::tracking_mode)0,tao::pegtl::ascii::eol::lf_crlf,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>>&,usbguard::Rule&,tao::pegtl::tracer<tao::pegtl::tracer_traits<false,true,2ul,8ul>>&)"
  "param_names":
  - ""
  - ""
  - ""
  "param_types":
  - "struct.tao::pegtl::string_input *"
  - "class.usbguard::Rule *"
  - "struct.tao::pegtl::tracer *"
  "return_type": "bool"
  "signature": "bool tao::pegtl::internal::seq<usbguard::RuleParser::condition, tao::pegtl::internal::star<tao::pegtl::plus<tao::pegtl::ascii::blank>, usbguard::RuleParser::condition> >::match<(struct tao::pegtl::string_input * , usbguard::Rule * , struct tao::pegtl::tracer * )"
"project": "usbguard"
"target_name": "fuzzer-uevent"
"target_path": "/src/usbguard/src/Tests/Fuzzers/fuzzer-uevent.cpp"
