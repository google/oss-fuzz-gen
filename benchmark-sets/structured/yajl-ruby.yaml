"functions":
- "name": "yajl_parse_complete"
  "param_names":
  - "hand"
  "param_types":
  - "struct.yajl_handle_t *"
  "return_type": "int"
  "signature": "int yajl_parse_complete(struct yajl_handle_t * hand)"
- "name": "yajl_lex_peek"
  "param_names":
  - "lexer"
  - "jsonText"
  - "jsonTextLen"
  - "offset"
  "param_types":
  - "struct.yajl_lexer_t *"
  - "char *"
  - "int"
  - "int"
  "return_type": "int"
  "signature": "int yajl_lex_peek(struct yajl_lexer_t * lexer, char * jsonText, int jsonTextLen, int offset)"
- "name": "yajl_get_error"
  "param_names":
  - "hand"
  - "verbose"
  - "jsonText"
  - "jsonTextLen"
  "param_types":
  - "struct.yajl_handle_t *"
  - "int"
  - "char *"
  - "int"
  "return_type": "char *"
  "signature": "char * yajl_get_error(struct yajl_handle_t * hand, int verbose, char * jsonText, int jsonTextLen)"
- "name": "yajl_string_encode"
  "param_names":
  - "buf"
  - "str"
  - "len"
  - "htmlSafe"
  "param_types":
  - "struct.yajl_buf_t *"
  - "char *"
  - "int"
  - "int"
  "return_type": "void"
  "signature": "void yajl_string_encode(struct yajl_buf_t * buf, char * str, int len, int htmlSafe)"
- "name": "yajl_render_error_string"
  "param_names":
  - "hand"
  - "jsonText"
  - "jsonTextLen"
  - "verbose"
  "param_types":
  - "struct.yajl_handle_t *"
  - "char *"
  - "int"
  - "int"
  "return_type": "char *"
  "signature": "char * yajl_render_error_string(struct yajl_handle_t * hand, char * jsonText, int jsonTextLen, int verbose)"
"project": "yajl-ruby"
"target_name": "json_fuzzer"
"target_path": "/src/yajl-ruby/fuzz/json_fuzzer.c"
