"functions":
- "name": "cv::dnn::dnn4_v20231225::readNetFromTensorflow(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)"
  "params":
  - "name": ""
    "type": "cv::dnn::dnn4_v20231225::Net *"
  - "name": ""
    "type": "std::string *"
  - "name": ""
    "type": "std::string *"
  "return_type": "void"
  "signature": "cv::dnn::dnn4_v20231225::readNetFromTensorflow(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)"
- "name": "cv::dnn::dnn4_v20231225::Net cv::dnn::dnn4_v20231225::detail::readNetDiagnostic<cv::dnn::dnn4_v20231225::(anonymous namespace)::TFImporter, char const*, char const*>(char const*&&, char const*&&)"
  "params":
  - "name": ""
    "type": "cv::dnn::dnn4_v20231225::Net *"
  - "name": ""
    "type": "char **"
  - "name": ""
    "type": "char **"
  "return_type": "void"
  "signature": "cv::dnn::dnn4_v20231225::Net cv::dnn::dnn4_v20231225::detail::readNetDiagnostic<cv::dnn::dnn4_v20231225::(anonymous namespace)::TFImporter, char const*, char const*>(char const*&&, char const*&&)"
- "name": "cv::dnn::dnn4_v20231225::readNetFromTensorflow(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&)"
  "params":
  - "name": ""
    "type": "cv::dnn::dnn4_v20231225::Net *"
  - "name": ""
    "type": "std::vector *"
  - "name": ""
    "type": "std::vector *"
  "return_type": "void"
  "signature": "cv::dnn::dnn4_v20231225::readNetFromTensorflow(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&, std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&)"
- "name": "cv::dnn::dnn4_v20231225::Net cv::dnn::dnn4_v20231225::detail::readNet<cv::dnn::dnn4_v20231225::(anonymous namespace)::TFImporter, char const*, char const*>(char const*&&, char const*&&)"
  "params":
  - "name": ""
    "type": "cv::dnn::dnn4_v20231225::Net *"
  - "name": ""
    "type": "char **"
  - "name": ""
    "type": "char **"
  "return_type": "void"
  "signature": "cv::dnn::dnn4_v20231225::Net cv::dnn::dnn4_v20231225::detail::readNet<cv::dnn::dnn4_v20231225::(anonymous namespace)::TFImporter, char const*, char const*>(char const*&&, char const*&&)"
- "name": "cv::dnn::dnn4_v20231225::(anonymous namespace)::TFImporter::TFImporter(cv::dnn::dnn4_v20231225::Net&, char const*, char const*)"
  "params":
  - "name": ""
    "type": "cv::dnn::dnn4_v20231225::(anonymous namespace)::TFImporter *"
  - "name": ""
    "type": "cv::dnn::dnn4_v20231225::Net *"
  - "name": ""
    "type": "char *"
  - "name": ""
    "type": "char *"
  "return_type": "void"
  "signature": "cv::dnn::dnn4_v20231225::(anonymous namespace)::TFImporter::TFImporter(cv::dnn::dnn4_v20231225::Net&, char const*, char const*)"
"language": "c++"
"project": "opencv"
"target_name": "imencode_fuzzer"
"target_path": "/src/imencode_fuzzer.cc"
