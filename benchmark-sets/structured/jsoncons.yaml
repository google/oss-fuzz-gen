"functions":
- "name": "jsoncons::json_decoder<jsoncons::basic_json<char,jsoncons::order_preserving_policy,std::__1::allocator<char>>,std::__1::allocator<char>>::visit_end_object(jsoncons::ser_contextconst&,std::__1::error_code&)"
  "param_names":
  - "this"
  - ""
  - ""
  "param_types":
  - "class.jsoncons::json_decoder *"
  - "class.std::exception *"
  - "class.std::__1::error_code *"
  "return_type": "bool"
  "signature": "bool jsoncons::json_decoder<jsoncons::basic_json<char, jsoncons::order_preserving_policy, std::__1::allocator<char> >, std::__1::allocator<char> >::visit_end_object(jsoncons::json_decoder * this, std::exception * , std::error_code * )"
- "name": "jsoncons::basic_json_cursor<char,jsoncons::stream_source<char>,std::__1::allocator<char>>::read_to(jsoncons::basic_json_visitor<char>&,std::__1::error_code&)"
  "param_names":
  - "this"
  - "visitor"
  - "ec"
  "param_types":
  - "class.jsoncons::basic_json_cursor *"
  - "class.jsoncons::basic_staj_cursor *"
  - "class.std::__1::error_code *"
  "return_type": "void"
  "signature": "void jsoncons::basic_json_cursor<char, jsoncons::stream_source<char>, std::__1::allocator<char> >::read_to(jsoncons::basic_json_cursor * this, jsoncons::basic_staj_cursor * visitor, std::error_code * ec)"
- "name": "jsoncons::index_key_value<jsoncons::basic_json<char,jsoncons::order_preserving_policy,std::__1::allocator<char>>>::operator=(jsoncons::index_key_value<jsoncons::basic_json<char,jsoncons::order_preserving_policy,std::__1::allocator<char>>>&&)"
  "param_names":
  - "this"
  - ""
  "param_types":
  - "struct.jsoncons::index_key_value *"
  - "struct.jsoncons::index_key_value *"
  "return_type": "struct.jsoncons::index_key_value *"
  "signature": "struct jsoncons::index_key_value * jsoncons::index_key_value<jsoncons::basic_json<char, jsoncons::order_preserving_policy, std::__1::allocator<char> > >::operator=(struct jsoncons::index_key_value * this, struct jsoncons::index_key_value * )"
- "name": "jsoncons::basic_json<char,jsoncons::order_preserving_policy,std::__1::allocator<char>>::operator=(jsoncons::basic_json<char,jsoncons::order_preserving_policy,std::__1::allocator<char>>&&)"
  "param_names":
  - "this"
  - "other"
  "param_types":
  - "class.jsoncons::basic_json *"
  - "class.jsoncons::basic_json *"
  "return_type": "class.jsoncons::basic_json *"
  "signature": "jsoncons::basic_json * jsoncons::basic_json<char, jsoncons::order_preserving_policy, std::__1::allocator<char> >::operator=(jsoncons::basic_json * this, jsoncons::basic_json * other)"
- "name": "jsoncons::basic_json<char,jsoncons::order_preserving_policy,std::__1::allocator<char>>::move_assignment(jsoncons::basic_json<char,jsoncons::order_preserving_policy,std::__1::allocator<char>>&&)"
  "param_names":
  - "this"
  - "other"
  "param_types":
  - "class.jsoncons::basic_json *"
  - "class.jsoncons::basic_json *"
  "return_type": "void"
  "signature": "void jsoncons::basic_json<char, jsoncons::order_preserving_policy, std::__1::allocator<char> >::move_assignment(jsoncons::basic_json * this, jsoncons::basic_json * other)"
"project": "jsoncons"
"target_name": "fuzz_ubjson_parser_max"
"target_path": "/src/jsoncons/fuzzers/fuzz_ubjson_parser_max.cpp"
