"functions":
- "name": "fmt::v10::vprint(fmt::v10::basic_string_view<char>, fmt::v10::basic_format_args<fmt::v10::context>)"
  "params":
  - "name": "fmt"
    "type": "char *"
  - "name": "args"
    "type": "size_t"
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "fmt::v10::detail::value *"
  "return_type": "void"
  "signature": "void fmt::v10::vprint(char * fmt, size_t args, size_t , fmt::v10::detail::value * )"
- "name": "fmt::v10::vprint(_IO_FILE*, fmt::v10::basic_string_view<char>, fmt::v10::basic_format_args<fmt::v10::context>)"
  "params":
  - "name": "f"
    "type": "struct _IO_FILE *"
  - "name": "fmt"
    "type": "char *"
  - "name": "args"
    "type": "size_t"
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "fmt::v10::detail::value *"
  "return_type": "void"
  "signature": "void fmt::v10::vprint(struct _IO_FILE * f, char * fmt, size_t args, size_t , fmt::v10::detail::value * )"
- "name": "fmt::v10::vprintln(_IO_FILE*, fmt::v10::basic_string_view<char>, fmt::v10::basic_format_args<fmt::v10::context>)"
  "params":
  - "name": "f"
    "type": "struct _IO_FILE *"
  - "name": "fmt"
    "type": "char *"
  - "name": "args"
    "type": "size_t"
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "fmt::v10::detail::value *"
  "return_type": "void"
  "signature": "void fmt::v10::vprintln(struct _IO_FILE * f, char * fmt, size_t args, size_t , fmt::v10::detail::value * )"
- "name": "fmt::v10::detail::print(_IO_FILE*, fmt::v10::basic_string_view<char>)"
  "params":
  - "name": "f"
    "type": "struct _IO_FILE *"
  - "name": "text"
    "type": "char *"
  - "name": ""
    "type": "size_t"
  "return_type": "void"
  "signature": "void fmt::v10::detail::print(struct _IO_FILE * f, char * text, size_t )"
- "name": "fmt::v10::detail::fwrite_fully(void const*, unsigned long, _IO_FILE*)"
  "params":
  - "name": "ptr"
    "type": "char *"
  - "name": "count"
    "type": "size_t"
  - "name": "stream"
    "type": "struct _IO_FILE *"
  "return_type": "void"
  "signature": "void fmt::v10::detail::fwrite_fully(char * ptr, size_t count, struct _IO_FILE * stream)"
"project": "fmt"
"target_name": "chrono-timepoint-fuzzer"
"target_path": "/src/fmt/test/fuzzing/chrono-timepoint.cc"
