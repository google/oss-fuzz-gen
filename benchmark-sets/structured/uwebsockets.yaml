"functions":
- "name": "uWS::HttpContext<false>::init()::{lambda(us_socket_t*, char*, int)#1}::__invoke(us_socket_t*, char*, int)"
  "params":
  - "name": ""
    "type": "struct us_socket_t *"
  - "name": ""
    "type": "char *"
  - "name": ""
    "type": "int"
  "return_type": "struct us_socket_t *"
  "signature": "struct us_socket_t * uWS::HttpContext<false>::init(struct us_socket_t * , char * , int )"
- "name": "uWS::HttpContext<true>::init()::{lambda(us_socket_t*, char*, int)#1}::__invoke(us_socket_t*, char*, int)"
  "params":
  - "name": ""
    "type": "struct us_socket_t *"
  - "name": ""
    "type": "char *"
  - "name": ""
    "type": "int"
  "return_type": "struct us_socket_t *"
  "signature": "struct us_socket_t * uWS::HttpContext<true>::init(struct us_socket_t * , char * , int )"
- "name": "_GLOBAL__sub_I_Http.cpp"
  "params": []
  "return_type": "void"
  "signature": "void _GLOBAL__sub_I_Http.cpp()"
- "name": "__cxx_global_var_init"
  "params": []
  "return_type": "void"
  "signature": "void __cxx_global_var_init()"
- "name": "uWS::TopicTree<uWS::TopicTreeMessage, uWS::TopicTreeBigMessage>::publishBig<uWS::WebSocket<false, true, test()::PerSocketData>::publish(std::__1::basic_string_view<char, std::__1::char_traits<char> >, std::__1::basic_string_view<char, std::__1::char_traits<char> >, uWS::OpCode, bool)::{lambda(uWS::Subscriber*, uWS::TopicTreeBigMessage&)#1}>(uWS::Subscriber*, std::__1::basic_string_view<char, std::__1::char_traits<char> >, uWS::TopicTreeBigMessage&&, uWS::WebSocket<false, true, test()::PerSocketData>::publish(std::__1::basic_string_view<char, std::__1::char_traits<char> >, std::__1::basic_string_view<char, std::__1::char_traits<char> >, uWS::OpCode, bool)::{lambda(uWS::Subscriber*, uWS::TopicTreeBigMessage&)#1})"
  "params":
  - "name": ""
    "type": "struct uWS::TopicTree *"
  - "name": ""
    "type": "struct uWS::Subscriber *"
  - "name": "topic"
    "type": "char *"
  - "name": ""
    "type": "size_t"
  - "name": "cb"
    "type": "struct uWS::TopicTreeBigMessage *"
  "return_type": "bool"
  "signature": "bool uWS::TopicTree<uWS::TopicTreeMessage, uWS::TopicTreeBigMessage>::publishBig<uWS::WebSocket<false, true, test(struct uWS::TopicTree * , struct uWS::Subscriber * , char * topic, size_t , struct uWS::TopicTreeBigMessage * cb)"
"project": "uwebsockets"
"target_name": "ssl_ctx_api"
"target_path": "/src/uWebSockets/uSockets/boringssl/fuzz/ssl_ctx_api.cc"
