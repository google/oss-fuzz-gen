"functions":
- "name": "_ZN5immer6detail4rbts23slice_right_mut_visitorINS1_4nodeIiNS_13memory_policyINS_11heap_policyINS_8cpp_heapEEENS_22unsafe_refcount_policyENS_14no_lock_policyENS_20no_transience_policyELb0ELb1EEELj2ELj2EEELb1ELb1EE13visit_regularIRNS1_11regular_posISC_EEEENSt3__15tupleIJjPSC_jSK_EEEOT_mNSA_5applyIS7_E4type4editE"
  "params":
  - "name": "pos"
    "type": "std::tuple *"
  - "name": "last"
    "type": "struct immer::detail::rbts::regular_sub_pos *"
  - "name": "e"
    "type": "size_t"
  "return_type": "void"
  "signature": "result_t std::__1::tuple<unsigned int, immer::detail::rbts::node<int, immer::memory_policy<immer::heap_policy<immer::cpp_heap>, immer::unsafe_refcount_policy, immer::no_lock_policy, immer::no_transience_policy, false, true>, 2u, 2u>*, unsigned int, immer::detail::rbts::node<int, immer::memory_policy<immer::heap_policy<immer::cpp_heap>, immer::unsafe_refcount_policy, immer::no_lock_policy, immer::no_transience_policy, false, true>, 2u, 2u>*> immer::detail::rbts::slice_right_mut_visitor<immer::detail::rbts::node<int, immer::memory_policy<immer::heap_policy<immer::cpp_heap>, immer::unsafe_refcount_policy, immer::no_lock_policy, immer::no_transience_policy, false, true>, 2u, 2u>, true, true>::visit_regular<immer::detail::rbts::regular_pos<immer::detail::rbts::node<int, immer::memory_policy<immer::heap_policy<immer::cpp_heap>, immer::unsafe_refcount_policy, immer::no_lock_policy, immer::visit_regular<immer::detail::rbts::regular_sub_pos<immer::detail::rbts::node<int, immer::memory_policy<immer::heap_policy<immer::cpp_heap>, immer::unsafe_refcount_policy, immer::no_lock_policy, immer::no_transience_policy, true, true>, 3U, 3U> > &>(regular_sub_pos<immer::detail::rbts::node<int, immer::memory_policy<immer::heap_policy<immer::cpp_heap>, immer::unsafe_refcount_policy, immer::no_lock_policy, immer::no_transience_policy, true, true>, 3U, 3U> > &, size_t, edit_t)"
- "name": "_ZN5immer6detail4rbts21towards_oh_ch_regularIRNS1_11regular_posINS1_4nodeIiNS_13memory_policyINS_11heap_policyINS_8cpp_heapEEENS_22unsafe_refcount_policyENS_14no_lock_policyENS_20no_transience_policyELb0ELb1EEELj2ELj2EEEEENS1_23slice_right_mut_visitorISD_Lb1ELb1EEEJRNSB_5applyIS8_E4type4editEEEEDcOT_T0_mjjDpOT1_"
  "params":
  - "name": "p"
    "type": "std::tuple *"
  - "name": "v"
    "type": "struct immer::detail::rbts::regular_sub_pos *"
  - "name": "idx"
    "type": "size_t"
  - "name": "offset_hint"
    "type": "int"
  - "name": "count_hint"
    "type": "int"
  - "name": "args"
    "type": "struct immer::detail::rbts::dec_visitor *"
  "return_type": "void"
  "signature": "node_t * towards_oh_ch_regular<immer::detail::rbts::regular_sub_pos<immer::detail::rbts::node<int, immer::memory_policy<immer::heap_policy<immer::cpp_heap>, immer::unsafe_refcount_policy, immer::no_lock_policy, immer::no_transience_policy, true, true>, 3U, 3U> > &, immer::detail::rbts::update_visitor<immer::detail::rbts::node<int, immer::memory_policy<immer::heap_policy<immer::cpp_heap>, immer::unsafe_refcount_policy, immer::no_lock_policy, immer::no_transience_policy, true, true>, 3U, 3U> >, (lambda at /src/immer/extra/fuzzer/flex-vector-bo.cpp:80:47) &>(regular_sub_pos<immer::detail::rbts::node<int, immer::memory_policy<immer::heap_policy<immer::cpp_heap>, immer::unsafe_refcount_policy, immer::no_lock_policy, immer::no_transience_policy, true, true>, 3U, 3U> > &, update_visitor<immer::detail::rbts::node<int, immer::memory_policy<immer::heap_policy<immer::cpp_heap>, immer::unsafe_refcount_policy, immer::no_lock_policy, immer::no_transience_policy, true, true>, 3U, 3U> >, size_t, count_t, count_t, Infinite loop &)"
- "name": "_ZN5immer6detail4rbts11regular_posINS1_4nodeIiNS_13memory_policyINS_11heap_policyINS_8cpp_heapEEENS_22unsafe_refcount_policyENS_14no_lock_policyENS_20no_transience_policyELb0ELb1EEELj2ELj2EEEE5visitINS1_23slice_right_mut_visitorISC_Lb1ELb1EEEJRmRNSA_5applyIS7_E4type4editEEEEDcT_DpOT0_"
  "params":
  - "name": "this"
    "type": "std::tuple *"
  - "name": "v"
    "type": "struct immer::detail::rbts::regular_sub_pos *"
  - "name": "args"
    "type": "size_t *"
  - "name": "args"
    "type": "struct immer::detail::rbts::dec_visitor *"
  "return_type": "void"
  "signature": "node_t * visit<immer::detail::rbts::update_visitor<immer::detail::rbts::node<int, immer::memory_policy<immer::heap_policy<immer::cpp_heap>, immer::unsafe_refcount_policy, immer::no_lock_policy, immer::no_transience_policy, true, true>, 3U, 3U> >, unsigned long &, (lambda at /src/immer/extra/fuzzer/flex-vector-bo.cpp:80:47) &>(regular_pos<immer::detail::rbts::node<int, immer::memory_policy<immer::heap_policy<immer::cpp_heap>, immer::unsafe_refcount_policy, immer::no_lock_policy, immer::no_transience_policy, true, true>, 3U, 3U> > *, update_visitor<immer::detail::rbts::node<int, immer::memory_policy<immer::heap_policy<immer::cpp_heap>, immer::unsafe_refcount_policy, immer::no_lock_policy, immer::no_transience_policy, true, true>, 3U, 3U> >, unsigned long &, Infinite loop &)"
- "name": "_ZN5immer6detail4rbts11regular_posINS1_4nodeIiNS_13memory_policyINS_11heap_policyINS_8cpp_heapEEENS_22unsafe_refcount_policyENS_14no_lock_policyENS_20no_transience_policyELb0ELb1EEELj2ELj2EEEE10towards_ohINS1_23slice_right_mut_visitorISC_Lb1ELb1EEEJRNSA_5applyIS7_E4type4editEEEEDcT_mjDpOT0_"
  "params":
  - "name": "this"
    "type": "std::tuple *"
  - "name": "v"
    "type": "struct immer::detail::rbts::regular_sub_pos *"
  - "name": "idx"
    "type": "size_t"
  - "name": "offset_hint"
    "type": "int"
  - "name": "args"
    "type": "struct immer::detail::rbts::dec_visitor *"
  "return_type": "void"
  "signature": "result_t towards_oh<immer::detail::rbts::slice_right_visitor<immer::detail::rbts::node<int, immer::memory_policy<immer::heap_policy<immer::cpp_heap>, immer::unsafe_refcount_policy, immer::no_lock_policy, immer::no_transience_policy, true, true>, 3U, 3U>, false> >(regular_pos<immer::detail::rbts::node<int, immer::memory_policy<immer::heap_policy<immer::cpp_heap>, immer::unsafe_refcount_policy, immer::no_lock_policy, immer::no_transience_policy, true, true>, 3U, 3U> > *, slice_right_visitor<immer::detail::rbts::node<int, immer::memory_policy<immer::heap_policy<immer::cpp_heap>, immer::unsafe_refcount_policy, immer::no_lock_policy, immer::no_transience_policy, true, true>, 3U, 3U>, false>, size_t, count_t)"
- "name": "_ZN5immer6detail4rbts11relaxed_posINS1_4nodeIiNS_13memory_policyINS_11heap_policyINS_7gc_heapEEENS_18no_refcount_policyENS_15spinlock_policyENS_20gc_transience_policyELb0ELb0EEELj2ELj2EEEE8last_subINS1_23concat_left_mut_visitorISC_EEJRNSA_5applyIS7_E4type4editESL_RNS1_8leaf_posISC_EESL_RNS1_8full_posISC_EEEEEDcT_DpOT0_"
  "params":
  - "name": "this"
    "type": "struct immer::detail::rbts::concat_center_pos *"
  - "name": "v"
    "type": "struct immer::detail::rbts::relaxed_pos *"
  - "name": "args"
    "type": "struct std::__cxx_atomic_base_impl *"
  - "name": "args"
    "type": "struct std::__cxx_atomic_base_impl *"
  - "name": "args"
    "type": "struct immer::detail::rbts::leaf_pos *"
  - "name": "args"
    "type": "struct std::__cxx_atomic_base_impl *"
  - "name": "args"
    "type": "struct immer::detail::rbts::leaf_sub_pos *"
  "return_type": "void"
  "signature": "concat_center_pos<immer::detail::rbts::node<int, immer::memory_policy<immer::heap_policy<immer::cpp_heap>, immer::unsafe_refcount_policy, immer::no_lock_policy, immer::no_transience_policy, true, true>, 3U, 3U> > last_sub<immer::detail::rbts::concat_both_visitor<immer::detail::rbts::node<int, immer::memory_policy<immer::heap_policy<immer::cpp_heap>, immer::unsafe_refcount_policy, immer::no_lock_policy, immer::no_transience_policy, true, true>, 3U, 3U> >, immer::detail::rbts::leaf_pos<immer::detail::rbts::node<int, immer::memory_policy<immer::heap_policy<immer::cpp_heap>, immer::unsafe_refcount_policy, immer::no_lock_policy, immer::no_transience_policy, true, true>, 3U, 3U> > &, immer::detail::rbts::relaxed_pos<immer::detail::rbts::node<int, immer::memory_policy<immer::heap_policy<immer::cpp_heap>, immer::unsafe_refcount_policy, immer::no_lock_policy, immer::no_transience_policy, true, true>, 3U, 3U> > &>(relaxed_pos<immer::detail::rbts::node<int, immer::memory_policy<immer::heap_policy<immer::cpp_heap>, immer::unsafe_refcount_policy, immer::no_lock_policy, immer::no_transience_policy, true, true>, 3U, 3U> > *, concat_both_visitor<immer::detail::rbts::node<int, immer::memory_policy<immer::heap_policy<immer::cpp_heap>, immer::unsafe_refcount_policy, immer::no_lock_policy, immer::no_transience_policy, true, true>, 3U, 3U> >, leaf_pos<immer::detail::rbts::node<int, immer::memory_policy<immer::heap_policy<immer::cpp_heap>, immer::unsafe_refcount_policy, immer::no_lock_policy, immer::no_transience_policy, true, true>, 3U, 3U> > &, relaxed_pos<immer::detail::rbts::node<int, immer::memory_policy<immer::heap_policy<immer::cpp_heap>, immer::unsafe_refcount_policy, immer::no_lock_policy, immer::no_transience_policy, true, true>, 3U, 3U> > &)"
"language": "c++"
"project": "immer"
"target_name": "vector"
"target_path": "/src/immer/extra/fuzzer/vector.cpp"
