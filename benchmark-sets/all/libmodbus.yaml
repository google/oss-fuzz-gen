"functions":
- "exceptions": []
  "name": "modbus_read_input_registers"
  "params":
  - "name": "ctx"
    "type": "bool "
  - "name": "addr"
    "type": "int"
  - "name": "nb"
    "type": "int"
  - "name": "dest"
    "type": "bool "
  "return_type": "int"
  "signature": "int modbus_read_input_registers(modbus_t *, int, int, uint16_t *)"
- "exceptions": []
  "name": "modbus_write_bits"
  "params":
  - "name": "ctx"
    "type": "bool "
  - "name": "addr"
    "type": "int"
  - "name": "nb"
    "type": "int"
  - "name": "src"
    "type": "bool "
  "return_type": "int"
  "signature": "int modbus_write_bits(modbus_t *, int, int, const uint8_t *)"
- "exceptions": []
  "name": "modbus_write_and_read_registers"
  "params":
  - "name": "ctx"
    "type": "bool "
  - "name": "write_addr"
    "type": "int"
  - "name": "write_nb"
    "type": "int"
  - "name": "src"
    "type": "bool "
  - "name": "read_addr"
    "type": "int"
  - "name": "read_nb"
    "type": "int"
  - "name": "dest"
    "type": "bool "
  "return_type": "int"
  "signature": "int modbus_write_and_read_registers(modbus_t *, int, int, const uint16_t *, int, int, uint16_t *)"
- "exceptions": []
  "name": "modbus_reply"
  "params":
  - "name": "ctx"
    "type": "bool "
  - "name": "req"
    "type": "bool "
  - "name": "req_length"
    "type": "int"
  - "name": "mb_mapping"
    "type": "bool "
  "return_type": "int"
  "signature": "int modbus_reply(modbus_t *, const uint8_t *, int, modbus_mapping_t *)"
- "exceptions": []
  "name": "modbus_read_input_bits"
  "params":
  - "name": "ctx"
    "type": "bool "
  - "name": "addr"
    "type": "int"
  - "name": "nb"
    "type": "int"
  - "name": "dest"
    "type": "bool "
  "return_type": "int"
  "signature": "int modbus_read_input_bits(modbus_t *, int, int, uint8_t *)"
"language": "c"
"project": "libmodbus"
"target_name": "FuzzServer"
"target_path": "/src/libmodbus/fuzz/FuzzServer.c"
