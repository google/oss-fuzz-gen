"functions":
- "exceptions": []
  "is_jvm_static": false
  "name": "[org.joni.ast.EncloseNode].toString(int)"
  "params":
  - "name": "arg0"
    "type": "int"
  "return_type": "java.lang.String"
  "signature": "[org.joni.ast.EncloseNode].toString(int)"
- "exceptions": []
  "is_jvm_static": false
  "name": "[org.joni.ast.CClassNode].clearNotFlag(org.joni.ScanEnvironment)"
  "params":
  - "name": "arg0"
    "type": "ScanEnvironment"
  "return_type": "void"
  "signature": "[org.joni.ast.CClassNode].clearNotFlag(org.joni.ScanEnvironment)"
- "exceptions": []
  "is_jvm_static": true
  "name": "[org.joni.CodeRangeBuffer].andCodeRange1(org.joni.CodeRangeBuffer,org.joni.ScanEnvironment,int,int,int[],int)"
  "params":
  - "name": "arg0"
    "type": "CodeRangeBuffer"
  - "name": "arg1"
    "type": "ScanEnvironment"
  - "name": "arg2"
    "type": "int"
  - "name": "arg3"
    "type": "int"
  - "name": "arg4"
    "type": "int[]"
  - "name": "arg5"
    "type": "int"
  "return_type": "org.joni.CodeRangeBuffer"
  "signature": "[org.joni.CodeRangeBuffer].andCodeRange1(org.joni.CodeRangeBuffer,org.joni.ScanEnvironment,int,int,int[],int)"
- "exceptions": []
  "is_jvm_static": true
  "name": "[org.joni.CodeRangeBuffer].addAllMultiByteRange(org.joni.ScanEnvironment,org.joni.CodeRangeBuffer)"
  "params":
  - "name": "arg0"
    "type": "ScanEnvironment"
  - "name": "arg1"
    "type": "CodeRangeBuffer"
  "return_type": "org.joni.CodeRangeBuffer"
  "signature": "[org.joni.CodeRangeBuffer].addAllMultiByteRange(org.joni.ScanEnvironment,org.joni.CodeRangeBuffer)"
- "exceptions": []
  "is_jvm_static": true
  "name": "[org.joni.Option].toString(int)"
  "params":
  - "name": "arg0"
    "type": "int"
  "return_type": "java.lang.String"
  "signature": "[org.joni.Option].toString(int)"
- "exceptions": []
  "is_jvm_static": false
  "name": "[org.joni.Regex].<init>(byte[],int,int,int,int,org.jcodings.Encoding,org.joni.Syntax,org.joni.WarnCallback)"
  "params":
  - "name": "arg0"
    "type": "byte[]"
  - "name": "arg1"
    "type": "int"
  - "name": "arg2"
    "type": "int"
  - "name": "arg3"
    "type": "int"
  - "name": "arg4"
    "type": "int"
  - "name": "arg5"
    "type": "Encoding"
  - "name": "arg6"
    "type": "Syntax"
  - "name": "arg7"
    "type": "WarnCallback"
  "return_type": "org.joni.Regex"
  "signature": "[org.joni.Regex].<init>(byte[],int,int,int,int,org.jcodings.Encoding,org.joni.Syntax,org.joni.WarnCallback)"
"language": "jvm"
"project": "joni"
"target_name": "RegexMatcherFuzzer"
"target_path": "/src/RegexMatcherFuzzer.java"
