# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: batch/v1
kind: Job
metadata:
  name: ofg-pr-${GKE_EXP_NAME}
  labels:
    customLabel: "myCustomValue"
spec:
  template:
     activeDeadlineSeconds: 43200  # 12 hours. We don't want large experiments to run indefinitely and eat up resources.
    spec:
      nodeSelector:
        cloud.google.com/gke-nodepool: ofg-pr-exp
      containers:
      - name: experiment
        image:  us-central1-docker.pkg.dev/oss-fuzz-base/testing/oss-fuzz-gen-pull-request:pr-${PR_ID}
        imagePullPolicy: Always
        # To guarantee uniqueness we use the node name in the experiment path.
        # Modify the follow command to customize one-off experiments.
        # For benchmark sets that need more disk, increase the results volume
        # size too.
        command: [
          "/bin/bash",
          "-c",
          "/venv/bin/python3 report/docker_run.py --benchmark-set=${GKE_EXP_BENCHMARK} --frequency-label=${GKE_EXP_NAME} --run-timeout=${GKE_EXP_FUZZING_TIMEOUT} --sub-dir=ofg-pr --model=${GKE_EXP_LLM} --delay=${GKE_EXP_DELAY} --num-samples=${GKE_EXP_NUM_SAMPLES} --llm-fix-limit=${GKE_EXP_LLM_FIX_LIMIT} --max-round=${GKE_EXP_MAX_ROUND} --local-introspector=${GKE_EXP_LOCAL_INTROSPECTOR} --vary-temperature=${GKE_EXP_VARY_TEMPERATURE} --agent=${GKE_EXP_AGENT} --redirect-outs=${GKE_REDIRECT_OUTS} ${GKE_EXP_ADDITIONAL_ARGS}"
        ]
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: ${GKE_EXP_REQ_CPU}
            ephemeral-storage: 10Gi
            memory: ${GKE_EXP_REQ_MEM}
        volumeMounts:
        - mountPath: "/experiment/results"
          name: results-volume
        env:
        - name: LLM_NUM_EXP
          value: '40'
        - name: LLM_NUM_EVA
          value: '10'
        - name: VERTEX_AI_LOCATIONS
          value: '${GKE_EXP_VERTEX_AI_LOCATIONS}'
        - name: CLOUD_BUILD_LOCATION
          value: 'us-west2'
        - name: GCB_BUILDPOOL_NAME
          value: projects/oss-fuzz/locations/us-west2/workerPools/buildpool-llm-agents
      # imagePullSecrets:
      # - name: oss-fuzz-base-artifect
      volumes:
      - name: results-volume
        ephemeral:
          volumeClaimTemplate:
            metadata:
              labels:
                type: ephemeral
            spec:
              accessModes: ["ReadWriteOnce"]
              storageClassName: "ephemeral-ssd"
              resources:
                requests:
                  storage: 1000Gi
      restartPolicy: Never
  backoffLimit: 5
  ttlSecondsAfterFinished: 432000  # 7 days.
  podFailurePolicy:
    rules:
      - action: FailJob
        onExitCodes:
          containerName: experiment  # Optional
          operator: NotIn            # One of: In, NotIn
          values: [0]
      - action: Ignore             # One of: Ignore, FailJob, Count
        onPodConditions:
        - type: DisruptionTarget   # Indicates Pod disruption