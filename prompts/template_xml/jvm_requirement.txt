{
  "requirements": {
    "input_variation": true,
    "complex_harness": true,
    "nested_loops": true,
    "wrap_with_tag": "<java_code>",
    "restrictions": {
      "forbidden_methods": ["java.lang.Random"],
      "forbidden_packages": ["java.lang.reflect"],
      "no_annotations": ["@FuzzTest"],
      "no_logging": true,
      "no_multithreading": true
    },
    "imports": {
      "necessary_only": true,
      "fully_qualified_names": true,
      "import_mappings": "{IMPORT_MAPPINGS}"
    },
    "object_creation": {
      "before_invocation": true,
      "avoid_variable_reuse": true
    },
    "class_name": "{HARNESS_NAME}",
    "runtime_exception_handling": true,
    "static_or_instance": "{STATIC_OR_INSTANCE}",
    "resource_handling": {
      "need_close": "{NEED_CLOSE}",
      "invoke_close": true,
      "implements_auto_closeable": true
    },
    "template": {
      "structure": {
        "imports": [
          "import com.code_intelligence.jazzer.api.FuzzedDataProvider;"
        ],
        "methods": {
          "fuzzerInitialize": "// Initializing objects for fuzzing",
          "fuzzerTearDown": "// Tear down objects after fuzzing",
          "fuzzerTestOneInput": "// Use the FuzzedDataProvider object to generate random data for fuzzing\n// Fuzz by invoking the target method with random parameters / objects generated above."
        }
      }
    },
    "import_list": [
      {
        "class_name": "FuzzedDataProvider",
        "full_class_name": "com.code_intelligence.jazzer.api.FuzzedDataProvider"
      },
      "{IMPORT_MAPPINGS}"
    ]
  }
}
